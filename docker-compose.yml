version: '3.8'

volumes:
  minio_data:
  db_volume:

services:
  db:
    image: mysql
    container_name: mysql
    #volumes:
    #  - ~/mysql-docker-data:/var/lib/mysql
    volumes:
      - db_volume:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "3306:3306"

  mlflow-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mlflow_server
    env_file:
      - .env
    environment:
      AWS_REGION: eu-west-3
      AWS_DEFAULT_REGION: eu-west-3
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
    ports:
      - "5000:5000"
    depends_on:
    - mc
    - db
    
    command: mlflow server --host 0.0.0.0 --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_ROOT_PASSWORD}@db:3306/${MYSQL_DATABASE} --default-artifact-root s3://mlflow/

  minio:
    restart: always
    container_name: mlflow_s3
    image: minio/minio
    command: server /data --console-address ':9001' --address ':9000'
    ports:
        - "9000:9000"
        - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY}
    volumes:
      - minio_data:/data

  mc:
      image: minio/mc
      depends_on:
          - minio
      container_name: mc
      env_file:
          - .env
      entrypoint: >
          /bin/sh -c "
          /tmp/wait-for-it.sh minio:9000 &&
          /usr/bin/mc alias set minio http://minio:9000 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY} &&
          /usr/bin/mc mb minio/mlflow;
          exit 0;
          "
      volumes:
          - ./wait-for-it.sh:/tmp/wait-for-it.sh